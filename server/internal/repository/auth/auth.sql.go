// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: auth.sql

package auth

import (
	"context"

	"github.com/google/uuid"
)

const create = `-- name: Create :one
insert into users (name, username, hashed_password)
values ($1, $2, $2)
returning id, username, name, hashed_password, created_at, updated_at
`

type CreateParams struct {
	Name     string
	Username string
}

func (q *Queries) Create(ctx context.Context, arg CreateParams) (User, error) {
	row := q.db.QueryRowContext(ctx, create, arg.Name, arg.Username)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Name,
		&i.HashedPassword,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updatePassword = `-- name: UpdatePassword :exec
update users
set hashed_password = $1
where id = $2
`

type UpdatePasswordParams struct {
	HashedPassword string
	ID             uuid.UUID
}

func (q *Queries) UpdatePassword(ctx context.Context, arg UpdatePasswordParams) error {
	_, err := q.db.ExecContext(ctx, updatePassword, arg.HashedPassword, arg.ID)
	return err
}
