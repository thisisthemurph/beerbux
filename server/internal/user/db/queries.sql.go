// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: queries.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const getUserIDByUsername = `-- name: GetUserIDByUsername :one
select id from users where username = $1 limit 1
`

func (q *Queries) GetUserIDByUsername(ctx context.Context, username string) (uuid.UUID, error) {
	row := q.db.QueryRowContext(ctx, getUserIDByUsername, username)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}

const updateUser = `-- name: UpdateUser :one
update users
set name = $2, username = $3
where id = $1
returning name, username
`

type UpdateUserParams struct {
	ID       uuid.UUID
	Name     string
	Username string
}

type UpdateUserRow struct {
	Name     string
	Username string
}

func (q *Queries) UpdateUser(ctx context.Context, arg UpdateUserParams) (UpdateUserRow, error) {
	row := q.db.QueryRowContext(ctx, updateUser, arg.ID, arg.Name, arg.Username)
	var i UpdateUserRow
	err := row.Scan(&i.Name, &i.Username)
	return i, err
}
