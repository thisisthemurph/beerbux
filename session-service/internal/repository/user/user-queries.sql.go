// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: user-queries.sql

package user

import (
	"context"
)

const createUser = `-- name: CreateUser :exec
insert into user_details (id, username)
values (?, ?)
`

type CreateUserParams struct {
	ID       string
	Username string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.ExecContext(ctx, createUser, arg.ID, arg.Username)
	return err
}

const getUser = `-- name: GetUser :one
select id, username from user_details where id = ?
`

func (q *Queries) GetUser(ctx context.Context, id string) (UserDetail, error) {
	row := q.db.QueryRowContext(ctx, getUser, id)
	var i UserDetail
	err := row.Scan(&i.ID, &i.Username)
	return i, err
}
